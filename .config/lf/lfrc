# Luke's lf settings
# Basic vars
set shell bash
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set color256
set icons
set hidden
set ignorecase
set info size

# Vars that depend on environmental variables
$lf -remote "send $id set previewer ${XDG_CONFIG_HOME:-$HOME/.config}/lf/scope"

# cmds/functions
cmd open ${{
    case $(file --mime-type $f -b) in
	image/vnd.djvu|application/pdf|application/octet-stream) setsid -f zathura $fx >/dev/null 2>&1 ;;
        text/*) $EDITOR $fx;;
	image/x-xcf|image/svg+xml) setsid -f gimp $f >/dev/null 2>&1 ;;
	image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\)\(_large\)*$" | sxiv -aio 2>/dev/null | lf-select ;;
	audio/*) mpv --audio-display=no $f ;;
	video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
	application/pdf|application/vnd*|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
        *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/n]"
	read ans
	[ $ans = "y" ] && rm -rf $fx
}}

cmd setbg "$1"
cmd bulkrename $vidir
cmd mpv "$1"
cmd code "$1"

#brody
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}
cmd fzf_jump ${{
  res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *.rar) unrar x "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# Not really image preview
map - $~/.config/lf/draw_img "$f"

cmd video_preview ${{
    CACHE=$(mktemp /tmp/thumb_cache.XXXXX)
    ffmpegthumbnailer -i "$f" -o $CACHE -s 0
    ~/.config/lf/draw_img $CACHE && rm $CACHE
}}
map + :video_preview

cmd zip %zip -r "$f" "$f"
cmd tar %tar -cvf "$f.tar" "$f"
cmd targz %tar -cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar -cjvf "$f.tar.bz2" "$f"
cmd rar %rar x "$f.rar" "$f"

# Remove some defaults
map m

# Bindings
map <c-f> fzf_jump
map J $lf -remote "send $id cd $(cut -d'	' -f2 ${XDG_CONFIG_HOME:-$HOME/.config} | fzf)"
map gh
map g top
map D delete
map mf mkfile
map mr sudomkfile
map md mkdir
map C chmod
map <c-n> push :mkdir<space>
map <c-r> reload
map <enter> shell
map x $$f
map X !$f
map tm $mpv $f
map tc $code $f
map o &mimeopen $f
map O $mimeopen --ask $f

map A rename # at the very end
map c push A<c-u> # new rename
map I push A<c-a> # at the very beginning
map i push A<a-b><a-b><a-f> # before extention
map B bulkrename
map b $setbg $f

map <c-e> down
map <c-y> up
map V push :!nvim<space>

#Dir. Shortcut
map .h cd ~/
map .d cd ~/Downloads
map .a cd ~/Downloads/Animes
map .n cd ~/Downloads/Novel
map .s cd ~/Downloads/Series
map .p cd ~/Downloads/Pictures
map .j cd ~/Downloads/JDownloader2
map .v cd ~/Downloads/Videos
map .y cd ~/Downloads/Videos/Youtube
map .D cd ~/Downloads/Documents
map .m cd ~/Downloads/Music
map .M cd /mnt
map .u cd ~/Downloads/Essential/Udemy
map .E cd ~/Downloads/DEEEEEEP
map .c cd ~/.config
map .l cd ~/.local
map .b cd ~/.local/bin
map .S cd ~/.local/src

# Archive Mappings
map az zip
map at tar
map ar rar
map ag targz
map ab targz
map au unarchive
